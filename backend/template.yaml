AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  backend

  SAM Template for backend with Express.js using AWS Lambda Web Adapter
  
# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 30
    MemorySize: 512
    Environment:
      Variables:
        AWS_LAMBDA_EXEC_WRAPPER: /opt/bootstrap
        PORT: 3000

Resources:
  # API Function with Express.js
  ApiFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: hello-world/
      Handler: run.sh
      Runtime: nodejs20.x
      Architectures:
        - x86_64
      Layers:
        - !Sub arn:aws:lambda:${AWS::Region}:753240598075:layer:LambdaAdapterLayerX86:24
      Environment:
        Variables:
          COURSES_TABLE_NAME: !Ref CoursesTable
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref CoursesTable
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /{proxy+}
            Method: ANY
        RootEvent:
          Type: Api
          Properties:
            Path: /
            Method: ANY
  
  # DynamoDB Table
  CoursesTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub ${AWS::StackName}-courses
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
      KeySchema:
        - AttributeName: id
          KeyType: HASH
      BillingMode: PAY_PER_REQUEST

Outputs:
  ApiUrl:
    Description: "API Gateway endpoint URL for Prod stage"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.${AWS::URLSuffix}/Prod/"
  ApiFunction:
    Description: "API Lambda Function ARN"
    Value: !GetAtt ApiFunction.Arn
  ApiFunctionIamRole:
    Description: "Implicit IAM Role created for API function"
    Value: !GetAtt ApiFunctionRole.Arn
  CoursesTableName:
    Description: "DynamoDB Courses Table Name"
    Value: !Ref CoursesTable
